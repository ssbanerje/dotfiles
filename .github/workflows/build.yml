---
name: Check Installer Scripts

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test-config:  # {{{
    name: Test Configs
    strategy:
      matrix:
        config:
          - base
          - ubuntu
          - macos
          - bin
          - tmux
          - ssh
          - editors
          - git
          - shell
          - fonts
          - ranger
          - i3wm
        os:
          - ubuntu-latest
          - macOS-latest
        exclude:
          - config: ubuntu
            os: macOS-latest
          - config: macos
            os: ubuntu-latest
          - config: i3wm
            os: macOS-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Initialize dependencies
        run: pip install pyyaml jinja2 distro
      - name: Install dotfiles
        run: ./install ${{ matrix.config }}
  # }}}

  test-profiles:  # {{{
    name: Test Profiles
    needs: [test-config]
    strategy:
      matrix:
        profile:
          - ubuntu
          - macos
        os:
          - ubuntu-latest
          - macOS-latest
        exclude:
          - profile: ubuntu
            os: macOS-latest
          - profile: macos
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Initialize dependencies
        run: pip install pyyaml jinja2 distro
      - name: Install dotfiles
        run: ./install_profile ${{ matrix.profile }}
  # }}}

  build-docker-ubuntu:  # {{{
    name: Build Ubuntu docker
    needs: [test-profiles]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
      - name: Build Ubuntu Container
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:ubuntu
          file: Dockerfile.ubuntu
  # }}}

  build-docker-arch:  # {{{
    name: Build Archlinux docker
    needs: [test-profiles]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
      - name: Build Ubuntu Container
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:ubuntu
          file: Dockerfile.ubuntu
      - name: Build ArchLinux Container
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:archlinux
          file: Dockerfile.archlinux
  # }}}

...
# vim: set fdm=marker:
